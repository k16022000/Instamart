{"ast":null,"code":"var _jsxFileName = \"/home/amphisoft/KAVI/react-practice/data-structure/instamart/src/PackageCreation.js\";\n// import React, { useRef } from 'react';\n// import \"./App.css\";\n// import { Button, Form, Input, Label } from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\n// import { Formik } from 'formik';\n// import * as Yup from \"yup\";\n// import ReactDatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// function PackageCreation() {\n//   const logoFileRef = useRef(null);\n\n//   const SignupSchema = Yup.object().shape({\n//     image: Yup.mixed()\n//       .required(('please_select_a_file'))\n//       .test('size', ('largeFileSize'), (file) => !file || (file && file.size < 500000))\n//       .test('fileType', 'Only .png and .jpeg files are allowed', (file) => !file || (file && ['image/png', 'image/jpeg'].includes(file.type))),\n//     preferredContactMethod: Yup.string().required('Required'),\n//     dateOfBirth: Yup.date().required('Required'),\n//   });\n\n//   return (\n//     <div className='app'>\n//       <div className='signup'>\n//         <Formik\n//           initialValues={{\n//             dateOfBirth: '',\n//           }}\n//           validationSchema={SignupSchema}\n//           onSubmit={(values) => {\n//             console.log(values, 'asjhbsuib==============');\n//           }}\n//         >\n//           {({ values,\n//             errors,\n//             touched,\n//             handleBlur,\n//             handleChange,\n//             handleSubmit,\n//             setFieldValue,\n//             setFieldTouched,\n//           }) => {\n//             const handleFileUpload = (e) => {\n//               setFieldTouched(e.target.name, true);\n//               setFieldValue(e.target.name, e.currentTarget.files[0]);\n//             };\n//             return (\n//               <Form onSubmit={handleSubmit}>\n//                 <Form.Field\n//                   required\n//                   name='name'\n//                   control={Input}\n//                   value={values.name}\n//                   onBlur={handleBlur}\n//                   onChange={handleChange}\n//                   type='text'\n//                   label='First Name'\n//                   placeholder='Enter your first name'\n//                   error={touched.name && errors.name}\n//                 />\n//                 <Form.Field\n//                   required\n//                   name='dateOfBirth'\n//                   control={ReactDatePicker}\n//                   selected={values.dateOfBirth}\n//                   onChange={(e) => setFieldValue('dateOfBirth', e)}\n//                   label='Date of Birth'\n//                   placeholderText='Select date of birth'\n//                   dateFormat='dd/MM/yyyy'\n//                   error={touched.dateOfBirth && errors.dateOfBirth}\n//                 />\n//                 <Form.Field>\n//                   <div>\n//                     <Button basic type=\"button\" content={'choose_file'} onClick={() => logoFileRef.current.click()} />\n//                     <span>\n//                       {(values.image.name || values.image) ? values.image.name || values.image : 'no_file_choosen'}\n//                     </span>\n//                     {touched.image && errors.image && (\n//                       <Label basic color=\"red\" pointing=\"left\">\n//                         {errors.image}\n//                       </Label>\n//                     )}\n//                     <input\n//                       name=\"image\"\n//                       type=\"file\"\n//                       accept=\"image/png, image/jpeg\"\n//                       ref={logoFileRef}\n//                       onChange={handleFileUpload}\n//                       style={{ display: 'none' }}\n//                     />\n//                   </div>\n//                 </Form.Field>\n//                 <Form.Field\n//                   required\n//                   name='search'\n//                   control={Input}\n//                   type='text'\n//                   value={values.search}\n//                   onChange={(e) => setFieldValue('search', e.target.value)}\n//                   label='search'\n//                   error={touched.search && errors.search}\n//                 />\n//                 <Button type=\"submit\">Submit</Button>\n//               </Form>\n//             )\n//           }}\n//         </Formik>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default PackageCreation;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PackageCreation() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"PackageCreation\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_c = PackageCreation;\nexport default PackageCreation;\nvar _c;\n$RefreshReg$(_c, \"PackageCreation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","PackageCreation","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/amphisoft/KAVI/react-practice/data-structure/instamart/src/PackageCreation.js"],"sourcesContent":["// import React, { useRef } from 'react';\n// import \"./App.css\";\n// import { Button, Form, Input, Label } from 'semantic-ui-react'\n// import 'semantic-ui-css/semantic.min.css';\n// import { Formik } from 'formik';\n// import * as Yup from \"yup\";\n// import ReactDatePicker from 'react-datepicker';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\n// function PackageCreation() {\n//   const logoFileRef = useRef(null);\n\n//   const SignupSchema = Yup.object().shape({\n//     image: Yup.mixed()\n//       .required(('please_select_a_file'))\n//       .test('size', ('largeFileSize'), (file) => !file || (file && file.size < 500000))\n//       .test('fileType', 'Only .png and .jpeg files are allowed', (file) => !file || (file && ['image/png', 'image/jpeg'].includes(file.type))),\n//     preferredContactMethod: Yup.string().required('Required'),\n//     dateOfBirth: Yup.date().required('Required'),\n//   });\n\n\n//   return (\n//     <div className='app'>\n//       <div className='signup'>\n//         <Formik\n//           initialValues={{\n//             dateOfBirth: '',\n//           }}\n//           validationSchema={SignupSchema}\n//           onSubmit={(values) => {\n//             console.log(values, 'asjhbsuib==============');\n//           }}\n//         >\n//           {({ values,\n//             errors,\n//             touched,\n//             handleBlur,\n//             handleChange,\n//             handleSubmit,\n//             setFieldValue,\n//             setFieldTouched,\n//           }) => {\n//             const handleFileUpload = (e) => {\n//               setFieldTouched(e.target.name, true);\n//               setFieldValue(e.target.name, e.currentTarget.files[0]);\n//             };\n//             return (\n//               <Form onSubmit={handleSubmit}>\n//                 <Form.Field\n//                   required\n//                   name='name'\n//                   control={Input}\n//                   value={values.name}\n//                   onBlur={handleBlur}\n//                   onChange={handleChange}\n//                   type='text'\n//                   label='First Name'\n//                   placeholder='Enter your first name'\n//                   error={touched.name && errors.name}\n//                 />\n//                 <Form.Field\n//                   required\n//                   name='dateOfBirth'\n//                   control={ReactDatePicker}\n//                   selected={values.dateOfBirth}\n//                   onChange={(e) => setFieldValue('dateOfBirth', e)}\n//                   label='Date of Birth'\n//                   placeholderText='Select date of birth'\n//                   dateFormat='dd/MM/yyyy'\n//                   error={touched.dateOfBirth && errors.dateOfBirth}\n//                 />\n//                 <Form.Field>\n//                   <div>\n//                     <Button basic type=\"button\" content={'choose_file'} onClick={() => logoFileRef.current.click()} />\n//                     <span>\n//                       {(values.image.name || values.image) ? values.image.name || values.image : 'no_file_choosen'}\n//                     </span>\n//                     {touched.image && errors.image && (\n//                       <Label basic color=\"red\" pointing=\"left\">\n//                         {errors.image}\n//                       </Label>\n//                     )}\n//                     <input\n//                       name=\"image\"\n//                       type=\"file\"\n//                       accept=\"image/png, image/jpeg\"\n//                       ref={logoFileRef}\n//                       onChange={handleFileUpload}\n//                       style={{ display: 'none' }}\n//                     />\n//                   </div>\n//                 </Form.Field>\n//                 <Form.Field\n//                   required\n//                   name='search'\n//                   control={Input}\n//                   type='text'\n//                   value={values.search}\n//                   onChange={(e) => setFieldValue('search', e.target.value)}\n//                   label='search'\n//                   error={touched.search && errors.search}\n//                 />\n//                 <Button type=\"submit\">Submit</Button>\n//               </Form>\n//             )\n//           }}\n//         </Formik>\n//       </div>\n//     </div>\n//   )\n// }\n\n// export default PackageCreation;\n\nimport React from 'react'\n\nfunction PackageCreation() {\n  return (\n    <div>PackageCreation</div>\n  )\n}\n\nexport default PackageCreation"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,eAAeA,CAAA,EAAG;EACzB,oBACED,OAAA;IAAAE,QAAA,EAAK;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE9B;AAACC,EAAA,GAJQN,eAAe;AAMxB,eAAeA,eAAe;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}