{"ast":null,"code":"var _jsxFileName = \"/home/amphisoft/KAVI/react-practice/data-structure/instamart/src/Login/Signin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SigninSchema = Yup.object().shape({\n  username: Yup.string().required(\"Username is required.\"),\n  password: Yup.string().required(\"Password is required.\")\n});\nfunction Signin() {\n  _s();\n  const [error, setError] = useState(\"\");\n  const handleSignIn = async values => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: \"\",\n        password: \"\"\n      },\n      validationSchema: SigninSchema,\n      onSubmit: handleSignIn,\n      children: ({\n        errors,\n        touched,\n        handleSubmit\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        id: \"signin\",\n        action: \"userCheck\",\n        method: \"GET\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"../assets/Images/logo.png\"),\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"title\",\n          children: \"Welcome back Instamaster!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"text\",\n          id: \"username\",\n          placeholder: \"Username\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          name: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"btn\",\n          type: \"submit\",\n          children: \"SIGN IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New to INSTAMART? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/signup\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), \" instead\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Signin, \"Wysf5k9/9rbzWl+spWgJpEWy35U=\");\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","Formik","Form","Field","Yup","jsxDEV","_jsxDEV","SigninSchema","object","shape","username","string","required","password","Signin","_s","error","setError","handleSignIn","values","className","children","initialValues","validationSchema","onSubmit","errors","touched","handleSubmit","id","action","method","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","name","href","_c","$RefreshReg$"],"sources":["/home/amphisoft/KAVI/react-practice/data-structure/instamart/src/Login/Signin.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport \"./login.css\"\n\n\nconst SigninSchema = Yup.object().shape({\n  username: Yup.string().required(\"Username is required.\"),\n  password: Yup.string().required(\"Password is required.\"),\n});\n\nfunction Signin() {\n  const [error, setError] = useState(\"\");\n\n  const handleSignIn = async (values) => {\n  };\n\n  return (\n    <div className=\"signin\">\n      <Formik\n        initialValues={{\n          username: \"\",\n          password: \"\",\n        }}\n        validationSchema={SigninSchema}\n        onSubmit={handleSignIn}\n      >\n        {({\n          errors,\n          touched,\n          handleSubmit\n        }) => (\n          <Form id=\"signin\" action=\"userCheck\" method=\"GET\">\n            <img src={require(\"../assets/Images/logo.png\")} alt=\"Logo\" />\n            <p id=\"title\">Welcome back Instamaster!</p>\n\n            <Field\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"Username\"\n              name=\"username\"\n            />\n            {touched.username && errors.username && (\n              <span className=\"error\">{errors.username}</span>\n            )}\n\n            <Field\n              type=\"password\"\n              id=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n            />\n            {touched.password && errors.password && (\n              <span className=\"error\">{errors.password}</span>\n            )}\n\n            {error && <p id=\"error-message\">{error}</p>}\n\n            <button id=\"btn\" type=\"submit\">\n              SIGN IN\n            </button>\n            <p>\n              New to INSTAMART? <a href=\"/signup\">Sign up</a> instead\n            </p>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default Signin;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,QAAQ;AAC5C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGpB,MAAMC,YAAY,GAAGH,GAAG,CAACI,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACtCC,QAAQ,EAAEN,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB,CAAC;EACxDC,QAAQ,EAAET,GAAG,CAACO,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,uBAAuB;AACzD,CAAC,CAAC;AAEF,SAASE,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMkB,YAAY,GAAG,MAAOC,MAAM,IAAK,CACvC,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACrBf,OAAA,CAACL,MAAM;MACLqB,aAAa,EAAE;QACbZ,QAAQ,EAAE,EAAE;QACZG,QAAQ,EAAE;MACZ,CAAE;MACFU,gBAAgB,EAAEhB,YAAa;MAC/BiB,QAAQ,EAAEN,YAAa;MAAAG,QAAA,EAEtBA,CAAC;QACAI,MAAM;QACNC,OAAO;QACPC;MACF,CAAC,kBACCrB,OAAA,CAACJ,IAAI;QAAC0B,EAAE,EAAC,QAAQ;QAACC,MAAM,EAAC,WAAW;QAACC,MAAM,EAAC,KAAK;QAAAT,QAAA,gBAC/Cf,OAAA;UAAKyB,GAAG,EAAEC,OAAO,CAAC,2BAA2B,CAAE;UAACC,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC7D/B,OAAA;UAAGsB,EAAE,EAAC,OAAO;UAAAP,QAAA,EAAC;QAAyB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAE3C/B,OAAA,CAACH,KAAK;UACJmC,IAAI,EAAC,MAAM;UACXV,EAAE,EAAC,UAAU;UACbW,WAAW,EAAC,UAAU;UACtBC,IAAI,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACDX,OAAO,CAAChB,QAAQ,IAAIe,MAAM,CAACf,QAAQ,iBAClCJ,OAAA;UAAMc,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEI,MAAM,CAACf;QAAQ;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAChD,eAED/B,OAAA,CAACH,KAAK;UACJmC,IAAI,EAAC,UAAU;UACfV,EAAE,EAAC,UAAU;UACbW,WAAW,EAAC,UAAU;UACtBC,IAAI,EAAC;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC,EACDX,OAAO,CAACb,QAAQ,IAAIY,MAAM,CAACZ,QAAQ,iBAClCP,OAAA;UAAMc,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEI,MAAM,CAACZ;QAAQ;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAChD,EAEArB,KAAK,iBAAIV,OAAA;UAAGsB,EAAE,EAAC,eAAe;UAAAP,QAAA,EAAEL;QAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE3C/B,OAAA;UAAQsB,EAAE,EAAC,KAAK;UAACU,IAAI,EAAC,QAAQ;UAAAjB,QAAA,EAAC;QAE/B;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT/B,OAAA;UAAAe,QAAA,GAAG,oBACiB,eAAAf,OAAA;YAAGmC,IAAI,EAAC,SAAS;YAAApB,QAAA,EAAC;UAAO;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,YACjD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACtB,EAAA,CA1DQD,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AA4Df,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}